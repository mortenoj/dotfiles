#!/usr/bin/env bash

# Sources .zshrc
function reload {
	source ~/.zshrc
}

# `ls` after `cd`
function cd {
  builtin cd "$@" && ls
}

function dev {
    if [ -z $1 ]; then
        if [ -z $DEFAULT_DEV_ENV ]; then
            echo "usage: dev <environment>"
            echo "Or export \$DEFAULT_DEV_ENV"
            return
        fi
    fi
    ENVIRONMENT=${1:-$DEFAULT_DEV_ENV}

    file=$(find $DEV_ENVPATH -name "$ENVIRONMENT.sh")
    if [ -z $file ]; then
        echo "Environment shell file not found in path $DEV_ENVPATH/$ENVIRONMENT.sh"
        return
    fi
    source $file
    echo "Environemt $ENVIRONMENT Loaded"
}

# Runs arguments passed in new iterm tab
function tab {
    local cmd=""
    local cdto="$PWD"
    local args="$@"

    if [ -d "$1" ]; then
        cdto=`cd "$1"; pwd`
        args="${@:2}"
    fi

    if [ -n "$args" ]; then
        cmd="$args"
    fi
    osascript -i <<EOF
        tell application "iTerm"
            tell current window
                create tab with default profile
                tell the current session
                    write text "cd \"$cdto\"; $cmd"
                    write text "clear; $cmd"
                end tell
            end tell
        end tell
EOF
}

# Git stuff
function rwGit {
    GITURL=$1
    OWNER=$(echo $GITURL|grep -o ':\w*'|cut -d ":" -f2)
    NOP="-$OWNER:"
    echo ${GITURL//:/$NOP}
}

function gc {
    git clone $(rwGit $1)
}

function gra {
    git remote add $1 $(rwGit $2)
}

function prune-docker {
    docker system prune -a
}

function prune-node {
    find . -name "node_modules" -type d -prune -exec rm -rf '{}' +
}

function prune-DS_Store {
    find . -name '.DS_Store' -type f -delete
}

function prune-telepresence {
    find . -name 'telepresence.log' -type f -delete
}

function deleteSystemLogs {
    sudo rm /var/log/asl/*.asl
    sudo rm -i /private/var/log/asl/*.asl
}

function psgrep {
    ps -ef | egrep "$1"
}
